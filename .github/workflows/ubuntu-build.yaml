##############################################################################
# Copyright (c) 2022 Leon Lynch
#
# This file is licensed under the terms of the LGPL v2.1 license.
# See LICENSE file.
##############################################################################

name: Ubuntu build

on: [push]

env:
  TR31_VERSION: 0.4.5

jobs:
  build-ubuntu-debug:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: "Ubuntu 20.04", os: ubuntu-20.04, ubuntu_release_name: "focal", deps: "none", build_dukpt_ui: NO }
          - { name: "Ubuntu 20.04", os: ubuntu-20.04, ubuntu_release_name: "focal", deps: "tr31/qt", build_dukpt_ui: YES }
          - { name: "Ubuntu 22.04", os: ubuntu-22.04, ubuntu_release_name: "jammy", deps: "tr31/qt", build_dukpt_ui: YES }

    name: ${{ matrix.name }} build (static/debug/${{ matrix.deps }})
    runs-on: ${{ matrix.os }}

    steps:
    - name: Install MbedTLS
      run: |
        sudo apt-get update
        sudo apt-get install -y libmbedtls-dev

    - name: Install Qt5
      if: contains(matrix.deps, 'qt')
      run: sudo apt-get install -y qtbase5-dev

    - name: Install TR-31 release
      if: contains(matrix.deps, 'tr31')
      run: |
        gh release download --repo openemv/tr31 ${{ env.TR31_VERSION }}
        unzip tr31-${{ env.TR31_VERSION }}-${{ matrix.os }}.zip
        sudo dpkg -i tr31_${{ env.TR31_VERSION }}-0ubuntu1~ppa1~${{ matrix.ubuntu_release_name }}1_amd64.deb
        echo "CMAKE_REQUIRE_FIND_PACKAGE_tr31=YES" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - run: git describe --always --dirty

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE="Debug" -DCMAKE_REQUIRE_FIND_PACKAGE_tr31=${{ env.CMAKE_REQUIRE_FIND_PACKAGE_tr31 }} -DBUILD_DUKPT_UI=${{ matrix.build_dukpt_ui }}

    - name: Build
      run: cmake --build build

    - name: Test
      run: cmake --build build --target test

  build-ubuntu-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: "Ubuntu 20.04", os: ubuntu-20.04, ubuntu_release_name: "focal" }
          - { name: "Ubuntu 22.04", os: ubuntu-22.04, ubuntu_release_name: "jammy" }

    name: ${{ matrix.name }} build (release)
    runs-on: ${{ matrix.os }}

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libmbedtls-dev doxygen qtbase5-dev

    - name: Install TR-31 release
      run: |
        gh release download --repo openemv/tr31 ${{ env.TR31_VERSION }}
        unzip tr31-${{ env.TR31_VERSION }}-${{ matrix.os }}.zip
        sudo dpkg -i tr31_${{ env.TR31_VERSION }}-0ubuntu1~ppa1~${{ matrix.ubuntu_release_name }}1_amd64.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Get version from git tag
      run: echo "GIT_DESCRIBE=$(git describe --always --dirty)" >> $GITHUB_ENV

    - name: Configure CMake
      # CPACK_DEBIAN_PACKAGE_RELEASE augments the package version for the
      # intended Ubuntu release. The ppa1 component indicates that this is not
      # an official Ubuntu package. The release name component indicates that
      # this is for the specific Ubuntu release that has that name.
      run: cmake -B build -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_SHARED_LIBS=YES -DBUILD_DOCS=YES -DBUILD_DUKPT_UI=YES -DCPACK_COMPONENTS_GROUPING=ALL_COMPONENTS_IN_ONE -DCPACK_DEBIAN_PACKAGE_RELEASE="0ubuntu1~ppa1~${{ matrix.ubuntu_release_name }}1"

    - name: Build
      run: cmake --build build

    - name: Test
      run: cmake --build build --target test

    - name: Package
      run: cmake --build build --target package

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: dukpt-${{ env.GIT_DESCRIBE }}-${{ matrix.os }}
        path: build/dukpt_*.deb
        if-no-files-found: error
